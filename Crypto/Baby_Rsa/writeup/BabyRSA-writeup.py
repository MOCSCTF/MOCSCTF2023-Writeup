#Solution From RSA, m**5 mode n = c, we can also write it as m**5 = n*t + c r m=iroot(tn+c,5). As now the numbers are relatively small. We can try brute force.

import gmpy2
from Crypto.Util.number import bytes_to_long,long_to_bytes

n = 121446462369209451890437032279136016024268203501248194257609931221963533527199394973409011905486641679108317234924655933661545463018526912448106616952943420042711484652003531686367244423014997999061668104274969568323007029999355285369105667292099216247486258823046660342027096922217325719949281351217824639352
e = 5
c = 2024715838723229932996994533200785991701363155407914346928049796721069567393947919443804708716872796152639820442127002975654571284012586002912601016561097502456057332364910586582716490098348376197261185682113012688560304356403863332106252927365183583519783396929
for i in range(1000000000):
    m, is_true_root = gmpy2.iroot(i*n + c, e)
    if is_true_root:
        print(f"Found i = {i}")
        print(long_to_bytes(m))
        break

#Then go to https://onlineasciitools.com/convert-decimal-to-ascii to get decimal output to ASCII string: Y0u_Kn0w_R5@!. so flag is MOCSCTF{Y0u_Kn0w_R5@!}